data = add_column(data, d = data_df[,2], .after = 2)
data = add_column(data, d = data_df[,3], .after = 3)
colnames(data)[2] = "year"
colnames(data)[3] = "month"
colnames(data)[4] = "day"
###a
length(unique(data$pid))
unique(data$pid)
length(unique(data$sid))
for (i in c(1:9)){
df = data %>% filter(data$pid==unique(data$pid)[i])
count = length(unique(df$sid))
no_of_sellers = append(no_of_sellers,count)
}
length(unique(data$sid))
no_of_sellers = list()
for (i in c(1:9)){
df = data %>% filter(data$pid==unique(data$pid)[i])
count = length(unique(df$sid))
no_of_sellers = append(no_of_sellers,count)
}
View(no_of_sellers)
View(no_of_sellers)
barplot(unlist(no_of_sellers),names.arg=c(1:9),xlab="Products",ylab="No_of_sellers",col="blue")
month_day = paste(data$month,data$day)
View(data)
View(data)
data = data[,-c(3,4)]
#data
data = add_column(data, month_day = month_day, .after = 1)
View(data)
#data
seller_count_byday = data %>% group_by(month_day) %>% summarise(seller_count_byday = length(unique(sid)))
View(seller_count_byday)
#data
product_count_byday = data %>% group_by(month_day) %>% summarise(product_count_byday = length(unique(pid)))
View(product_count_byday)
barplot(seller_count_byday$seller_count_byday,names.arg=seller_count_byday$month_day,xlab="Date",ylab="No_of_sellers",col="green")
barplot(product_count_byday$product_count_byday,names.arg=product_count_byday$month_day,xlab="Date",ylab="No_of_products",col="red")
avg = data.frame( data %>% group_by(pid,month_day) %>% summarise(average = mean(price)))
View(avg)
max = data.frame(data %>% group_by(pid,month_day) %>% summarise(max = max(price)))
min = data.frame(data %>% group_by(pid,month_day) %>% summarise(min = min(price)))
View(df)
df = data%>% filter(data$bbox=="success")
bbox_price = data.frame(df %>% group_by(pid,month_day) %>% summarise(bbox_price = mean(bbox_price)))
for (i in c(1:9)){
avg = data.frame( data %>% group_by(pid,month_day) %>% summarise(average = mean(price)))
max = data.frame(data %>% group_by(pid,month_day) %>% summarise(max = max(price)))
min = data.frame(data %>% group_by(pid,month_day) %>% summarise(min = min(price)))
df=data%>% filter(data$bbox=="success")
bbox_price = data.frame(df %>% group_by(pid,month_day) %>% summarise(bbox_price = mean(bbox_price)))
max=max[max$pid==unique(data$pid)[i],]
avg=avg[avg$pid==unique(data$pid)[i],]
min=min[min$pid==unique(data$pid)[i],]
bbox_price=bbox_price[bbox_price$pid==unique(data$pid)[i],]
if (i==2){
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='8 31',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 1',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 2',bbox_price=0))
}
df = data.frame(avg$month_day,avg$average,max$max,min$min,bbox_price$bbox_price)
g = ggplot(df, aes(avg$month_day,group=1))
g = g + geom_line(aes(y=avg$average), colour="red")
g = g + geom_line(aes(y=max$max), colour="green")
g = g + geom_line(aes(y=min$min), colour="blue")
g = g + geom_line(aes(y=bbox_price$bbox_price), colour="purple")
print(g)
}
for (i in c(1:8)){
avg = data.frame( data %>% group_by(pid,month_day) %>% summarise(average = mean(price)))
max = data.frame(data %>% group_by(pid,month_day) %>% summarise(max = max(price)))
min = data.frame(data %>% group_by(pid,month_day) %>% summarise(min = min(price)))
df=data%>% filter(data$bbox=="success")
bbox_price = data.frame(df %>% group_by(pid,month_day) %>% summarise(bbox_price = mean(bbox_price)))
max=max[max$pid==unique(data$pid)[i],]
avg=avg[avg$pid==unique(data$pid)[i],]
min=min[min$pid==unique(data$pid)[i],]
bbox_price=bbox_price[bbox_price$pid==unique(data$pid)[i],]
if (i==2){
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='8 31',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 1',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 2',bbox_price=0))
}
df = data.frame(avg$month_day,avg$average,max$max,min$min,bbox_price$bbox_price)
g = ggplot(df, aes(avg$month_day,group=1))
g = g + geom_line(aes(y=avg$average), colour="red")
g = g + geom_line(aes(y=max$max), colour="green")
g = g + geom_line(aes(y=min$min), colour="blue")
g = g + geom_line(aes(y=bbox_price$bbox_price), colour="purple")
print(g)
}
for (i in c(1:9)){
avg = data.frame( data %>% group_by(pid,month_day) %>% summarise(average = mean(price)))
max = data.frame(data %>% group_by(pid,month_day) %>% summarise(max = max(price)))
min = data.frame(data %>% group_by(pid,month_day) %>% summarise(min = min(price)))
df=data%>% filter(data$bbox=="success")
bbox_price = data.frame(df %>% group_by(pid,month_day) %>% summarise(bbox_price = mean(bbox_price)))
max=max[max$pid==unique(data$pid)[i],]
avg=avg[avg$pid==unique(data$pid)[i],]
min=min[min$pid==unique(data$pid)[i],]
bbox_price=bbox_price[bbox_price$pid==unique(data$pid)[i],]
if (i==2){
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='8 31',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 1',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 2',bbox_price=0))
}
df = data.frame(avg$month_day,avg$average,max$max,min$min,bbox_price$bbox_price)
g = ggplot(df, aes(avg$month_day,group=1))
g = g + geom_line(aes(y=avg$average), colour="red")
g = g + geom_line(aes(y=max$max), colour="green")
g = g + geom_line(aes(y=min$min), colour="blue")
g = g + geom_line(aes(y=bbox_price$bbox_price), colour="purple")
print(g)
}
##c-) Seller ratings, positive feedbacks and counts, product ratings and counts by product
data %>% group_by(pid) %>% summarise(average_sid_rating = mean(sid_rating))
data %>% group_by(pid) %>% summarise(average_sid_pos_fb = mean(sid_pos_fb))
data %>% group_by(pid) %>% summarise(average_sid_rating_cnt = mean(sid_rating_cnt))
data<-readRDS("amz_train.rds")
library(tibble)
library(bnlearn)
library(dplyr)
require(ggplot2)
View(data)
library(tibble)
library(bnlearn)
library(dplyr)
require(ggplot2)
data<-readRDS("amz_train.rds")
data$epoc = as.Date(as.character(data$epoc))
data_df <- data.frame(year = as.numeric(format(data$epoc, format = "%Y")),
month = as.numeric(format(data$epoc, format = "%m")),
day = as.numeric(format(data$epoc, format = "%d")))
data = data[,-2]
data = add_column(data, d = data_df[,1], .after = 1)
data = add_column(data, d = data_df[,2], .after = 2)
data = add_column(data, d = data_df[,3], .after = 3)
colnames(data)[2] = "year"
colnames(data)[3] = "month"
colnames(data)[4] = "day"
###a-) Number of Products, number of sellers (overall and by day)
length(unique(data$pid))
unique(data$pid)
length(unique(data$sid))
no_of_sellers = list()
for (i in c(1:9)){
df = data %>% filter(data$pid==unique(data$pid)[i])
count = length(unique(df$sid))
no_of_sellers = append(no_of_sellers,count)
}
no_of_sellers
barplot(unlist(no_of_sellers),names.arg=c(1:9),xlab="Products",ylab="No_of_sellers",col="blue")
month_day = paste(data$month,data$day)
data = data[,-c(3,4)]
#data
data = add_column(data, month_day = month_day, .after = 1)
#data
product_count_byday = data %>% group_by(month_day) %>% summarise(product_count_byday = length(unique(pid)))
seller_count_byday = data %>% group_by(month_day) %>% summarise(seller_count_byday = length(unique(sid)))
barplot(seller_count_byday$seller_count_byday,names.arg=seller_count_byday$month_day,xlab="Date",ylab="No_of_sellers",col="green")
barplot(product_count_byday$product_count_byday,names.arg=product_count_byday$month_day,xlab="Date",ylab="No_of_products",col="red")
##b-) Average, max, min price, buy-box price, shipping cost by product
avg = data.frame( data %>% group_by(pid,month_day) %>% summarise(average = mean(price)))
max = data.frame(data %>% group_by(pid,month_day) %>% summarise(max = max(price)))
min = data.frame(data %>% group_by(pid,month_day) %>% summarise(min = min(price)))
df = data%>% filter(data$bbox=="success")
bbox_price = data.frame(df %>% group_by(pid,month_day) %>% summarise(bbox_price = mean(bbox_price)))
for (i in c(1:9)){
avg = data.frame( data %>% group_by(pid,month_day) %>% summarise(average = mean(price)))
max = data.frame(data %>% group_by(pid,month_day) %>% summarise(max = max(price)))
min = data.frame(data %>% group_by(pid,month_day) %>% summarise(min = min(price)))
df=data%>% filter(data$bbox=="success")
bbox_price = data.frame(df %>% group_by(pid,month_day) %>% summarise(bbox_price = mean(bbox_price)))
max=max[max$pid==unique(data$pid)[i],]
avg=avg[avg$pid==unique(data$pid)[i],]
min=min[min$pid==unique(data$pid)[i],]
bbox_price=bbox_price[bbox_price$pid==unique(data$pid)[i],]
if (i==2){
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='8 31',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 1',bbox_price=0))
bbox_price=rbind(bbox_price,data.frame(pid=unique(data$pid)[i],month_day='9 2',bbox_price=0))
}
df = data.frame(avg$month_day,avg$average,max$max,min$min,bbox_price$bbox_price)
g = ggplot(df, aes(avg$month_day,group=1))
g = g + geom_line(aes(y=avg$average), colour="red")
g = g + geom_line(aes(y=max$max), colour="green")
g = g + geom_line(aes(y=min$min), colour="blue")
g = g + geom_line(aes(y=bbox_price$bbox_price), colour="purple")
print(g)
}
###############
#  shipping cost by product eklenmeli
##############
##c-) Seller ratings, positive feedbacks and counts, product ratings and counts by product
data %>% group_by(pid) %>% summarise(average_sid_rating = mean(sid_rating))
data %>% group_by(pid) %>% summarise(average_sid_pos_fb = mean(sid_pos_fb))
data %>% group_by(pid) %>% summarise(average_sid_rating_cnt = mean(sid_rating_cnt))
data %>% group_by(pid) %>% summarise(average_pid_rating = mean(pid_rating))
data %>% group_by(pid) %>% summarise(average_pid_rating_cnt = mean(pid_rating_cnt))
##c-) Seller ratings, positive feedbacks and counts, product ratings and counts by product
data %>% group_by(pid) %>% summarise(average_sid_rating = mean(sid_rating))
data %>% group_by(pid) %>% summarise(average_sid_pos_fb = mean(sid_pos_fb))
data %>% group_by(pid) %>% summarise(average_sid_rating_cnt = mean(sid_rating_cnt))
data %>% group_by(pid) %>% summarise(average_pid_rating = mean(pid_rating))
data %>% group_by(pid) %>% summarise(average_pid_rating_cnt = mean(pid_rating_cnt))
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
View(data)
##total
a = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
colSums(a[,2])
View(a)
b = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
colSums(b[,2])
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
bb = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
View(aa)
View(bb)
per = aa[,2]/bb[,2]
View(aa)
View(bb)
data %>% filter(sid=="amazon", pid=="B00MVVI1FC", bbox=="success")
view(data %>% filter(sid=="amazon", pid=="B00MVVI1FC", bbox=="success"))
data %>% filter(sid=="amazon", pid=="B00MVVI1FC")
view(data %>% filter(sid=="amazon", pid=="B00MVVI1FC"))
View(data)
aa = mutate(.aa, c(B00MVVI1FC,8))
aa1 = mutate(aa, c(B00MVVI1FC,8))
aa1 = mutate(aa, c("B00MVVI1FC",8))
aa1 = rbind(aa, c("B00MVVI1FC",8))
View(aa1)
aa1 = rbind(aa, c("B00MVVI1FC",0), .after = 4)
View(aa1)
?rbind
aa11 = add_row(aa, d = c("B00MVVI1FC",0), .after = 4)
aa11 = add_row(aa, d = b[5,], .after = 4)
aa11 = add_row(aa, d = b[5,])
aa11 = add_row(aa, d = c("B00MVVI1FC",0), .after = 4)
aa11 = add_row(aa, d = t(c("B00MVVI1FC",0)), .after = 4)
aa11 = add_row(aa, d = t(c("B00MVVI1FC",0)))
?add_row
?add_row
view(asd <- tibble(x = 1:3, y = 3:1))
view(asd <- tibble(x = 1:3, y = 3:1) %>% add_row(x = 4, y = 0, .before = 2))
View(aa1)
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
View(aa)
aa11 = add_row(.aa, pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid))) %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 4)
View(aa)
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
aa %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
bb = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
e
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
aa %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
aa = aa %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
bb = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
per = aa[,2]/bb[,2]
View(per)
winper = aa[,2]/bb[,2]
View(winper)
winper = aa[,2]/bb[,2] %>% add_column(data, d = aa[,1], before = 1)
winper = aa[,2]/bb[,2] %>% add_column(aa, d = aa[,1], before = 1)
winper = winper   %>% add_column(aa, d = aa[,1], before = 1)
View(winper)
winper = aa[,2]/bb[,2]
View(winper)
winper = winper   %>% add_column(aa, d = aa[,1], before = 1)
View(winper)
winper = aa[,2]/bb[,2]
winper = winper   %>% add_column(aa[,1], before = 1)
winper = winper   %>% add_column(aa[,1], .before = 1)
winper = aa[,2]/bb[,2]
winper = winper   %>% add_column(aa[,1], .before = 1)
View(seller_count_byday)
View(winper)
View(no_of_sellers)
##c-) Seller ratings, positive feedbacks and counts, product ratings and counts by product
data %>% group_by(pid) %>% summarise(average_sid_rating = mean(sid_rating))
winper = winper   %>% add_column(aa[,1], .before = 1)
##c-) Seller ratings, positive feedbacks and counts, product ratings and counts by product
data %>% group_by(pid) %>% summarise(average_sid_rating = mean(sid_rating))
winper
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
aa = aa %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5) %>% add_row(pid="B00AMFLZLG" , No_of_Amazon_Win="NA", .before = 3)
aa = aa %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
aa = aa %>% add_row(pid="B00AMFLZLG" , No_of_Amazon_Win="NA", .before = 3)
aa = aa %>% add_row(pid="B00AMFLZLG" , No_of_Amazon_Win=NA, .before = 3)
View(aa)
##d-) Percentage of buy-box successes when Amazon is the seller against every other seller (total and by product and week)
##by product
aa = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
aa = aa %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
winper = aa[,2]/bb[,2]
winper = winper   %>% add_column(aa[,1], .before = 1)
winper = winper   %>% add_column(aa[,1], .before = 1) %>% add_row(pid="B00AMFLZLG" , No_of_Amazon_Win=NA, .before = 3)
winper = aa[,2]/bb[,2]
winper = winper   %>% add_column(aa[,1], .before = 1) %>% add_row(pid="B00AMFLZLG" , No_of_Amazon_Win=NA, .before = 3)
View(winper)
##total
a = data %>% filter(sid=="amazon", bbox=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
colSums(a[,2])
b = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
colSums(b[,2])
View(a)
View(a)
View(a)
View(aa)
View(b)
View(aa)
winpertotal = aa/bb
View(aa)
View(bb)
winpertotal = colSums(aa[,2])/colSums(bb[,2])
View(winper)
winper = add_row(pid="total", No_of_Amazon_Win=winpertotal)
winper = add_row(.winper, pid="total", No_of_Amazon_Win=winpertotal)
winper = winper %>% add_row(pid="total", No_of_Amazon_Win=winpertotal)
View(winper)
##e-) Prime, FBA, Page and Rank information by seller and by product
##Rank
data %>% filter(bbox=="success") %>% group_by(rank) %>% summarise(no_of_bbox_success = length((rank)))
##e-) Prime, FBA, Page and Rank information by seller and by product
##is_Prime
data %>% filter(bbox=="success", is_prime=="yes") %>% group_by(pid) %>% summarise(two_condition = length((is_prime)))
data %>% filter(bbox=="success", is_prime=="yes") %>% group_by(sid) %>% summarise(two_condition = length((is_prime)))
##is_fba
data %>% filter(bbox=="success", is_fba=="yes") %>% group_by(pid) %>% summarise(two_condition = length((is_fba)))
##is_fba
data %>% filter(bbox=="success", is_fba=="yes") %>% group_by(pid) %>% summarise(two_condition = length((is_fba)))
##Rank
data %>% filter(bbox=="success") %>% group_by(rank) %>% summarise(no_of_bbox_success = length((rank)))
##Page
data %>% filter(bbox=="success") %>% group_by(page) %>% summarise(no_of_bbox_success = length((page)))
data %>% filter(bbox=="success") %>% group_by(pid,page) %>% summarise(no_of_bbox_success = length((page)))
boxplot(data$price)
a = data %>% filter(sid=="amazon", box=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
a = a %>% add_row(pid="B00MVVI1FC" , No_of_Amazon_Win=0, .before = 5)
b = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
winper = a[,2]/b[,2]
winper = winper   %>% add_column(a[,1], .before = 1) %>% add_row(pid="B00AMFLZLG" , No_of_Amazon_Win=NA, .before = 3)
##total
a = data %>% filter(sid=="amazon", box=="success") %>% group_by(pid) %>% summarise(No_of_Amazon_Win = length((sid)))
colSums(a[,2])
b = data %>% filter(sid=="amazon")%>% group_by(pid) %>% summarise(is_Amazon_seller = length((sid)))
colSums(b[,2])
winpertotal = colSums(a[,2])/colSums(b[,2])
winper = winper %>% add_row(pid="total", No_of_Amazon_Win=winpertotal)
aa=data %>% filter(bbox=="success") %>% group_by(pid) %>% summarise(result = mean((sid_rating_cnt)))
aa
data<-readRDS("new_data_IE544PROJECT.rds")
View(data)
data = data[-c(1:4)]
View(data)
library(bnlearn)
library(bnlearn)
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(2:4)]
View(data1)
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(1:4)]
View(data1)
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(2:4)]
View(data1)
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.051, 0.15, 0.4, 0.6, 1, 1.5,2),
include.lowest = TRUE,
right = TRUE )
View(data1)
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.051, 0.15, 0.4, 0.6, 1, 1.5, 2, 4 ),
include.lowest = TRUE,
right = TRUE )
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(2:4)]
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.051, 0.15, 0.4, 0.6, 1, 1.5, 2, 4 ),
include.lowest = TRUE,
right = TRUE )
View(data1)
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.051, 0.15, 0.4, 0.6, 1, 1.5, 2, 20 ),
include.lowest = TRUE,
right = TRUE )
?cut
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(2:4)]
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.051, 0.15, 0.4, 0.6, 1, 1.5, 2, 20 ),
include.lowest = TRUE,
right = TRUE )
View(data1)
str(data1)
View(data1)
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(2:4)]
View(data1)
data1 = data1[-c(5)]
str(data1)
data1$is_Amazon           <- as.factor(data1$is_Amazon)
View(data1)
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.04, 0.06, 0.15, 0.4, 0.6, 1, 1.5, 2, 20 ),
include.lowest = TRUE,
right = TRUE )
data1$sid_pos_fb<- cut(data1$sid_pos_fb,
breaks = c(0, 7, 8, 9, 9.2, 9.4, 9.6, 9.7, 9.8, 9.9, 10 ),
include.lowest = TRUE,
right = TRUE )
str(data1)
dag1 = hc(data1  )
graphviz.plot(dag1)
score(dag1, data1)
wlist <- data.frame(from = c( "price_gap_ratio"),
to = c( "bbox"))
dag1 = hc(data1  , whitelist = wlist ,  blacklist= blist)
dag1 = hc(data1  , whitelist = wlist )
graphviz.plot(dag1)
score(dag1, data1)
wlist <- data.frame(from = c( "is_Amazon", "price_gap_ratio"),
to = c( "bbox", "bbox"))
dag1 = hc(data1  , whitelist = wlist )
graphviz.plot(dag1)
E
E
data1 = readRDS("new_data_IE544PROJECT_son.rds")
data1 = data1[-c(1:4)]
View(data1)
data1 = data1[-c(4)]
dag1 = hc(data1  , whitelist = wlist )
graphviz.plot(dag1)
str(data1)
dag1 = hc(data1  , whitelist = wlist )
str(data1)
colnames(data1)
data1$is_Amazon <- as.factor(data1$is_Amazon)
data1$price_gap_ratio<- cut(data1$price_gap_ratio,
breaks = c(0,0.02, 0.04, 0.06, 0.15, 0.4, 0.6, 1, 1.5, 2, 20 ),
include.lowest = TRUE,
right = TRUE )
data1$sid_pos_fb<- cut(data1$sid_pos_fb,
breaks = c(0, 7, 8, 9, 9.2, 9.4, 9.6, 9.7, 9.8, 9.9, 10 ),
include.lowest = TRUE,
right = TRUE )
#colnames(data1)
str(data1)
dag1 = hc(data1   )
graphviz.plot(dag1)
wlist <- data.frame(from = c( "price_gap_ratio"),
to = c(  "bbox"))
dag1 = hc(data1 , whitelist = wlist )
graphviz.plot(dag1)
wlist <- data.frame(from = c( "price_gap_ratio","is_Amazon" ),
to = c(  "bbox", "bbox"))
dag1 = hc(data1 , whitelist = wlist )
graphviz.plot(dag1)
colnames(data1)
blist <- data.frame(from = c("rank", ),
to = c("is_Amazon" ))
dag1 = hc(data1 , whitelist = wlist , blacklist= blist)
blist <- data.frame(from = c("rank", ),
to = c("is_Amazon" ))
blist <- data.frame(from = c("rank" ),
to = c("is_Amazon" ))
dag1 = hc(data1 , whitelist = wlist , blacklist= blist)
graphviz.plot(dag1)
blist <- data.frame(from = c("rank" , "price_gap_ratio" ),
to = c("is_Amazon" , "is_Amazon" ))
dag1 = hc(data1 , whitelist = wlist , blacklist= blist)
graphviz.plot(dag1)
blist <- data.frame(from = c("rank" , "price_gap_ratio" , "sid_pos_fb"),
to = c("is_Amazon" , "is_Amazon", "is_Amazon" ))
dag1 = hc(data1 , whitelist = wlist , blacklist= blist)
graphviz.plot(dag1)
blist <- data.frame(from = c("rank" , "price_gap_ratio" , "sid_pos_fb" , "bbox"),
to = c("is_Amazon" , "is_Amazon", "is_Amazon" , "rank" ))
dag1 = hc(data1 , whitelist = wlist , blacklist= blist)
graphviz.plot(dag1)
dag2 = tabu(data1,whitelist = wlist , blacklist= blist)
graphviz.plot(dag2)
dag1 = hc(data1 , whitelist = wlist , blacklist= blist)
graphviz.plot(dag1)
dag2 = tabu(data1,whitelist = wlist , blacklist= blist)
graphviz.plot(dag2)
score(dag2, data1)
score(dag1, data1)
